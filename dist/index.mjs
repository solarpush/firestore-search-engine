import{HttpsError as e}from"firebase-functions/https";import{FlagEmbedding as t,EmbeddingModel as n}from"fastembed";import{Timestamp as i}from"@google-cloud/firestore";async function r(e){let i=[`query: ${e}`];const r=(await t.init({model:n.BGEBaseEN})).embed(i,1),s=await r.next(),o=(null==s?void 0:s.value.length)>0?s.value:[];return Array.from(o[0])}class s{constructor(e,t,n,i){this.firestoreInstance=e,this.fieldValueInstance=t,this.config=n,this.props=i,this.props.wordMaxLength?this.wordMaxLength=this.props.wordMaxLength:this.wordMaxLength=50,this.props.wordMinLength?this.wordMinLength=this.props.wordMinLength:this.wordMinLength=3}async execute(){const e=await r(this.props.inputField);return await this.saveWithLimitedKeywords(this.props.returnedFields,e)}async saveWithLimitedKeywords(e,t){const n=this.firestoreInstance.bulkWriter();await this.cleanOldIndexes(e,n),n.create(this.firestoreInstance.collection(this.config.collection).doc(),{search_keywords:this.fieldValueInstance.vector(t),...e}),await n.close()}async cleanOldIndexes(e,t){const{indexedDocumentPath:n}=e,i=await this.firestoreInstance.collection(this.config.collection).where("indexedDocumentPath","==",n).get();if(!i.empty){for(let e=0;e<i.docs.length;e++)t.delete(i.docs[e].ref),e>500&&await t.flush();await t.flush()}}}class o{constructor(e,t,n,i){this.firestoreInstance=e,this.fieldValueInstance=t,this.config=n,this.props=i,this.props.wordMaxLength?this.wordMaxLength=this.props.wordMaxLength:this.wordMaxLength=50,this.props.wordMinLength?this.wordMinLength=this.props.wordMinLength:this.wordMinLength=3}async execute({documentProps:e,documentsToIndexes:t}){const n=[];for(const{...i}of t){const t=i[e.indexedKey],s={indexedDocumentPath:i.indexedDocumentPath,fieldValue:t.toLowerCase()};for(const t of e.returnedKey)s[t]=i[t];const o=await r(t);console.log("HERE TYPOS",o),n.push({keywords:o,returnedFields:s})}return await this.bulkWithLimitedKeywords(n)}async bulkWithLimitedKeywords(e){const t=this.firestoreInstance.bulkWriter();let n=0;for(const i of e)n%1e3==0&&await t.flush(),await this.cleanOldIndexes(i.returnedFields,t,n),t.create(this.firestoreInstance.collection(this.config.collection).doc(),{search_keywords:this.fieldValueInstance.vector(i.keywords),...i.returnedFields}),n++,n>1500&&(await t.flush(),n++);await t.close()}async cleanOldIndexes(e,t,n){const{indexedDocumentPath:i}=e,r=await this.firestoreInstance.collection(this.config.collection).where("indexedDocumentPath","==",i).get();if(!r.empty)for(let e=0;e<r.docs.length;e++)t.delete(r.docs[e].ref),++n>1500&&await t.flush()}}function a(e,t){const n=Array.from({length:e.length+1},((e,n)=>[n,...Array(t.length).fill(0)]));for(let e=0;e<=t.length;e++)n[0][e]=e;for(let i=1;i<=e.length;i++)for(let r=1;r<=t.length;r++){const s=e[i-1]===t[r-1]?0:1;n[i][r]=Math.min(n[i-1][r]+1,n[i][r-1]+1,n[i-1][r-1]+s)}return n[e.length][t.length]}class c{constructor(e,t,n){this.firestoreInstance=e,this.config=t,this.props=n,this.props.limit||(this.props.limit=10)}async execute(){return await this.search(this.props.fieldValue)}async search(e){console.time("Search Execution Time"),console.time("SearchQueryTime");const t=await r(e),n=await this.firestoreInstance.collectionGroup(this.config.collection).findNearest({vectorField:"search_keywords",queryVector:t,limit:this.props.limit,distanceMeasure:"COSINE",distanceThreshold:.2,distanceResultField:"distance"}).get();if(console.timeEnd("SearchQueryTime"),n.empty)return console.timeEnd("Search Execution Time"),[];const i=new Set,s=[];console.time("SearchLoopTime"),console.log("Search Query Length",n.docs.length);for(const e of n.docs){const t=e.data(),n=t.indexedDocumentPath;i.has(n)||(i.add(n),s.push(t))}console.timeEnd("SearchLoopTime");const o=function(e,t){return console.time("fse_rankResults"),e.map((e=>{const n=a(t.toLowerCase(),e.fieldValue.toLowerCase()),[i,r,s,o,c,l,d,h,u,f]=t.toLowerCase(),p=a([i,r,s,o,c,l,d,h,u,f].reverse().join(""),e.fieldValue.toLowerCase()),g=1+10*e.distance,w=.03*(n+p)+.97*g;return console.log("finalScore",w),console.log("distcance",g),{...e,finalScore:w}})).sort(((e,t)=>t.finalScore-e.finalScore)).reverse()}(s,e),c=o;return console.timeEnd("Search Execution Time"),c}}function l(e,t){if(e===t)return!0;if(typeof e!=typeof t)return!1;if(e instanceof i&&t instanceof i)return e.isEqual(t);if(e&&t&&"object"==typeof e&&"object"==typeof t){const n=Object.keys(e),i=Object.keys(t);if(n.length!==i.length)return!1;for(const r of n){if(!i.includes(r))return!1;if(!l(e[r],t[r]))return!1}return!0}return!1}const d=e=>{const t=e.before.data(),n=e.after.data(),i={},r={},s={};Object.keys(n).forEach((e=>{const s=e,o=n[s],a=t[s];void 0===a?r[s]=o:l(o,a)||(i[s]=o)})),Object.keys(t).forEach((e=>{const i=e;void 0===n[i]&&(s[i]=t[i])}));return{before:t,after:n,changes:i,added:r,removed:s}};class h{constructor(e,t,n){if(this.firestoreInstance=e,this.config=t,this.fieldValueInstance=n,this.firestoreInstance.settings({ignoreUndefinedProperties:!0}),this.config.collection.length<1)throw new Error("collectionName is required and must be a non-empty string.")}async search(e){if("string"!=typeof e.fieldValue||0===e.fieldValue.length)throw new Error("fieldValue is required and must be a non-empty string.");return await new c(this.firestoreInstance,this.config,e).execute()}async indexes(e){if("string"!=typeof e.inputField||0===e.inputField.length)throw new Error("fieldValue is required and must be a non-empty string.");return await new s(this.firestoreInstance,this.fieldValueInstance,this.config,e).execute()}async indexesAll(e){return await new o(this.firestoreInstance,this.fieldValueInstance,this.config,e.indexesConfig).execute(e)}async expressWrapper(e,t="/search"){if(!t||!t.startsWith("/"))throw new Error("Path must be in the format '/search'");return e.get(`${t}/:searchValue`,(async(e,t)=>{const{searchValue:n}=e.params;if(!n||!n.length||n.length<3)return void t.json([]);const i=await this.search({fieldValue:n});t.json(i)})),e}onRequestWrapped(){return async(e,t)=>{const n=e.query.searchValue;if(!n||"string"!=typeof n||n.length<3)return void t.json([]);const i=await this.search({fieldValue:n});t.json(i)}}onCallWrapped(t){return async({data:n,auth:i})=>{if(t){if(!await t(i))throw new e("unauthenticated","Unauthorized")}const r=n.searchValue;if(!r||"string"!=typeof r||r.length<3)return[];return await this.search({fieldValue:r})}}onDocumentWriteWrapper(e,t,n,i={},r={}){return e({...r,document:n},(async e=>{var n,r;const s=null===(n=e.data)||void 0===n?void 0:n.data();if(!e.data||!s)return;const o=s[t.indexedKey],a={};for(const e of t.returnedKey)(s[e]||0===s[e])&&(a[e]=s[e]);if(o&&"string"==typeof o&&o.length>(null!==(r=i.wordMinLength)&&void 0!==r?r:3))try{await this.indexes({...i,inputField:o,returnedFields:{indexedDocumentPath:e.data.ref.path,...a}})}catch(e){return}}))}onDocumentUpdateWrapper(e,t,n,i={},r={}){return e({...r,document:n},(async e=>{var n;if(!e.data)return;const{changes:r,after:s}=d(e.data),o=r[t.indexedKey],a={};for(const e of t.returnedKey)(s[e]||0===s[e])&&(a[e]=s[e]);if(o&&"string"==typeof o&&o.length>(null!==(n=i.wordMinLength)&&void 0!==n?n:3))try{await this.indexes({...i,inputField:o,returnedFields:{indexedDocumentPath:e.data.after.ref.path,...a}})}catch(e){return}}))}onDocumentDeletedWrapper(e,t,n={}){return e({...n,document:t},(async e=>{var t;const n=null===(t=e.data)||void 0===t?void 0:t.data();if(e.data&&n)try{const t=this.firestoreInstance.bulkWriter(),n=e.data.ref.path,i=await this.firestoreInstance.collection(this.config.collection).where("indexedDocumentPath","==",n).get();for(let e=0;e<i.docs.length;e++){const n=i.docs[e];t.delete(n.ref),e%500==0&&await t.flush()}await t.close()}catch(e){return}}))}}export{h as FirestoreSearchEngine};
//# sourceMappingURL=index.mjs.map
