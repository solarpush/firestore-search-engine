"use strict";var t=require("firebase-functions/https"),e=require("@google-cloud/firestore");class n{constructor(t,e,n){this.firestoreInstance=t,this.config=e,this.props=n,n.wordMaxLength?this.wordMaxLength=n.wordMaxLength:this.wordMaxLength=50,n.wordMinLength?this.wordMinLength=n.wordMinLength:this.wordMinLength=3}async execute(){const t=function(t,e){var n,r;if(t.length>e)throw new Error("Input up to 50 Char");const i=new Set,s=t.length>4?[4,5,6]:[3,4],o={a:["z","q","s"],z:["a","e","s"],e:["z","r","d"],r:["e","t","f"],t:["r","y","g"],y:["t","u","h"],u:["y","i","j"],i:["u","o","k"],o:["i","p","l"],p:["o","m"],q:["a","s","w"],s:["a","z","d","q"],d:["s","e","f"],f:["d","r","g"],g:["f","t","h"],h:["g","y","j"],j:["h","u","k"],k:["j","i","l"],l:["k","o","m"],m:["l","p"]};for(const e of s)for(let s=0;s<=t.length-e;s++){const a=t.slice(s,s+e);if(a.length>=3){const t=a[0];o[t]&&o[t].forEach((t=>{const e=t+a.slice(1);i.add(e.trim())})),null===(n=o[t])||void 0===n||n.forEach((t=>{const e=t+a;i.add(e.trim())})),i.add(a.slice(1).trim())}const c=a[a.length-1];a.length>=3&&o[c]&&(o[c].forEach((t=>{const e=a.slice(0,-1)+t;i.add(e.trim())})),null===(r=o[c])||void 0===r||r.forEach((t=>{const e=a+t;i.add(e.trim())})),i.add(a.slice(0,-1).trim()))}return i}(this.props.inputField,this.wordMaxLength);return await this.saveWithLimitedKeywords(this.props.returnedFields,Array.from(t))}async saveWithLimitedKeywords(t,e){const n=this.firestoreInstance.bulkWriter();await this.cleanOldIndexes(t,n);const r=[];for(let t=0;t<e.length;t+=800)r.push(e.slice(t,t+800));for(let e=0;e<r.length;e++)n.create(this.firestoreInstance.collection(this.config.collection).doc(),{search_keywords:r[e],...t}),e%500==0&&await n.flush();await n.close()}async cleanOldIndexes(t,e){const{indexedDocumentPath:n}=t,r=await this.firestoreInstance.collection(this.config.collection).where("indexedDocumentPath","==",n).get();if(!r.empty){for(let t=0;t<r.docs.length;t++)e.delete(r.docs[t].ref),t%500==0&&await e.flush();await e.flush()}}}function r(t,e){const n=Array.from({length:t.length+1},((t,n)=>[n,...Array(e.length).fill(0)]));for(let t=0;t<=e.length;t++)n[0][t]=t;for(let r=1;r<=t.length;r++)for(let i=1;i<=e.length;i++){const s=t[r-1]===e[i-1]?0:1;n[r][i]=Math.min(n[r-1][i]+1,n[r][i-1]+1,n[r-1][i-1]+s)}return n[t.length][e.length]}class i{constructor(t,e,n){this.firestoreInstance=t,this.config=e,this.props=n,n.limit||(this.props.limit=20)}async execute(){return await this.search(this.props.fieldValue)}async search(t){const e=function(t,e=3,n=8){const r=new Set;t.trim().split(" ").forEach((t=>{for(let i=1;i<=Math.min(t.trim().length,n);i++)i<=e||r.add(t.trim().substring(0,i).toLowerCase())}));for(let i=1;i<=Math.min(t.trim().length,n);i++)i<=e||r.add(t.trim().substring(0,i).toLowerCase());return console.log(r),Array.from(r)}(t),n=await this.firestoreInstance.collection(this.config.collection).where("search_keywords","array-contains-any",[...e]).get();if(n.empty)return[];const i=new Set,s=[];for(const e of n.docs){const n=e.data(),{search_keywords:o,...a}=n,c=n.indexedDocumentPath;o.forEach((e=>{const n=t.split(" ");let o=!1,h=0,l=0;for(const t of n){const n=r(t,e);n<=2&&(o=!0,h=Math.min(n,h||1/0)),l+=n}console.log(l,o,t,n),o&&l<=6&&!i.has(c)&&(i.add(c),s.push({doc:a,relevance:h}))}))}s.sort(((t,e)=>t.relevance-e.relevance));return s.slice(0,this.props.limit).map((t=>t.doc))}}function s(t,n){if(t===n)return!0;if(typeof t!=typeof n)return!1;if(t instanceof e.Timestamp&&n instanceof e.Timestamp)return t.isEqual(n);if(t&&n&&"object"==typeof t&&"object"==typeof n){const e=Object.keys(t),r=Object.keys(n);if(e.length!==r.length)return!1;for(const i of e){if(!r.includes(i))return!1;if(!s(t[i],n[i]))return!1}return!0}return!1}const o=t=>{const e=t.before.data(),n=t.after.data(),r={},i={},o={};Object.keys(n).forEach((t=>{const o=t,a=n[o],c=e[o];void 0===c?i[o]=a:s(a,c)||(r[o]=a)})),Object.keys(e).forEach((t=>{const r=t;void 0===n[r]&&(o[r]=e[r])}));const a={before:e,after:n,changes:r,added:i,removed:o};return console.log("ChangeMap : "+JSON.stringify(r)),a};exports.FirestoreSearchEngine=class{constructor(t,e){if(this.firestoreInstance=t,this.config=e,this.firestoreInstance.settings({ignoreUndefinedProperties:!0}),this.config.collection.length<1)throw new Error("collectionName is required and must be a non-empty string.")}async search(t){if("string"!=typeof t.fieldValue||0===t.fieldValue.length)throw new Error("fieldValue is required and must be a non-empty string.");return await new i(this.firestoreInstance,this.config,t).execute()}async indexes(t){if("string"!=typeof t.inputField||0===t.inputField.length)throw new Error("fieldValue is required and must be a non-empty string.");return await new n(this.firestoreInstance,this.config,t).execute()}async expressWrapper(t,e="/search"){if(!e||!e.startsWith("/"))throw new Error("Path must be in the format '/search'");return t.get(`${e}/:searchValue`,(async(t,e)=>{const{searchValue:n}=t.params;if(!n||!n.length||n.length<3)return void e.json([]);const r=await this.search({fieldValue:n});e.json(r)})),t}onRequestWrapped(){return async(t,e)=>{const n=t.query.searchValue;if(!n||"string"!=typeof n||n.length<3)return void e.json([]);const r=await this.search({fieldValue:n});e.json(r)}}onCallWrapped(e){return async({data:n,auth:r})=>{if(e){if(!await e(r))throw new t.HttpsError("unauthenticated","Unauthorized")}const i=n.searchValue;if(!i||"string"!=typeof i||i.length<3)return[];return await this.search({fieldValue:i})}}onDocumentWriteWrapper(t,e,n,r={},i={}){return t({...i,document:n},(async t=>{var n,i;const s=null===(n=t.data)||void 0===n?void 0:n.data();if(!t.data||!s)return;const o=s[e.indexedKey],a={};for(const t of e.returnedKey)(s[t]||0===s[t])&&(a[t]=s[t]);if(o&&"string"==typeof o&&o.length>(null!==(i=r.wordMinLength)&&void 0!==i?i:3))try{await this.indexes({...r,inputField:o,returnedFields:{indexedDocumentPath:t.data.ref.path,...a}})}catch(t){return}}))}onDocumentUpdateWrapper(t,e,n,r={},i={}){return t({...i,document:n},(async t=>{var n;if(!t.data)return;const{changes:i,after:s}=o(t.data),a=i[e.indexedKey],c={};for(const t of e.returnedKey)(s[t]||0===s[t])&&(c[t]=s[t]);if(a&&"string"==typeof a&&a.length>(null!==(n=r.wordMinLength)&&void 0!==n?n:3))try{await this.indexes({...r,inputField:a,returnedFields:{indexedDocumentPath:t.data.after.ref.path,...c}})}catch(t){return}}))}onDocumentDeletedWrapper(t,e,n={}){return t({...n,document:e},(async t=>{var e;const n=null===(e=t.data)||void 0===e?void 0:e.data();if(t.data&&n)try{const e=this.firestoreInstance.bulkWriter(),n=t.data.ref.path,r=await this.firestoreInstance.collection(this.config.collection).where("indexedDocumentPath","==",n).get();for(let t=0;t<r.docs.length;t++){const n=r.docs[t];e.delete(n.ref),t%500==0&&await e.flush()}await e.close()}catch(t){return}}))}};
//# sourceMappingURL=index.cjs.map
